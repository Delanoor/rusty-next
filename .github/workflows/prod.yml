name: Build and Deploy Frontend

# Trigger the workflow when changes are pushed to the main branch
on:
  push:
    branches:
      - main

env:
  BASE_PATH: ${{ vars.BASE_PATH }}
  NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Install Node.js
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      # Install frontend dependencies
      - name: Install frontend dependencies
        run: npm install

      # Build frontend
      - name: Build frontend
        run: npm run build

      # Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -t vinorelbine/rusty-next .
          docker tag vinorelbine/rusty-next:latest vinorelbine/rusty-next:${{ github.sha }}
          docker push vinorelbine/rusty-next:latest
          docker push vinorelbine/rusty-next:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

    steps:
      - name: Install sshpass
        run: sudo apt-get install sshpass

      - name: Copy docker-compose.yml to droplet
        run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no docker-compose.yml root@${{ vars.DROPLET_IP }}:~

      - name: Copy nginx-setup.conf
        run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no nginx/local_templates.default.conf.template root@${{ vars.DROPLET_IP }}:/etc/nginx/templates/

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.DROPLET_IP }}
          envs: BASE_PATH, JWT_SECRET, DROPLET_IP, POSTGRES_PASSWORD

          username: root
          password: ${{ secrets.DROPLET_PASSWORD }}
          script: |
            cd ~

            docker compose down
            docker compose pull
            docker compose up -d
